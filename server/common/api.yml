swagger: "2.0"
info:
  version: 1.0.0
  title: backend
  description: My cool app
basePath: /api
tag: 
- name: "auth"
  description: "Everything about sign up and sign in"

consumes:
  - application/json
produces:
  - application/json

# definitions:
#   newAccount:
#     type: object
#     required:
#     - role_id
#     - first_name
#     - last_name
#     - email
#     - phone_num
#     properties:
#       role_id:
#         type: integer
#         enum: 
#         - 1
#         - 2
#       first_name:
#         type: string
#         example: thao
#       last_name:
#         type: string
#         example: nguyen
#       email:
#         type: string
#         example: thaonp041099@gmail.com
#       phone_num:
#         type: string
#         example: 0912345566
definitions:
  LoginInfo:
    type: object
    require:
      - email
      - password
    propperties:
      email:
        type: string
      password:
        type: string

paths:
  # /auth/register:
  #   post:
  #     tags:
  #       - auth
  #     description: Register new account
  #     parameters:
  #      -name: info
  #       in: body
  #       required: true
  #       description: User object that needs to be added to the user db
  #       schema: 
  #       $ref: "#/definitions/newAccount"
  #     respond:
  #       200:
  #         description: Register success
  #       405:
  #         description: Invalid input

  /auth/login:
    post:
      tags:
        - Login
      description: user login
      parameters:
        - account:
          in: body
          require: true
          description: user account
          schema: 
            $ref: "#/definitions/LoginInfo"
      respond:
        - 200: 
            description: go to user's page
        - 401:
            description: email or password incorrect
        

 
       


# definitions:
#   ExampleBody:
#     type: object
#     title: example
#     required:
#       - name
#     properties:
#       name:
#         type: string
#         example: no_stress

# paths:
#   /examples:
#     get:
#       tags:
#         - Examples
#       description: Fetch all examples
#       responses:
#         200:
#           description: Returns all examples
#     post:
#       tags:
#         - Examples
#       description: Create a new example
#       parameters:
#         - name: example
#           in: body
#           description: an example
#           required: true
#           schema: 
#             $ref: "#/definitions/ExampleBody"
#       responses:
#         200:
#           description: Returns all examples

#   /examples/{id}:
#     get:
#       tags:
#         - Examples
#       parameters:
#         - name: id
#           in: path
#           required: true
#           description: The id of the example to retrieve
#           type: integer
#       responses:
#         200:
#           description: Return the example with the specified id
#         404:
#           description: Example not found

#   /spec:
#     get:
#       tags:
#         - Specification
#       responses:
#         200:
#           description: Return the API specification
