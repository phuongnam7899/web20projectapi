swagger: "2.0"
info:
  version: 1.0.0
  title: backend
  description: My cool app
basePath: /api
tag: 
- name: "auth"
  description: "Everything about sign up and sign in"

consumes:
  - application/json
produces:
  - application/json

# definitions:

definitions:
  updateRef:
    type: object
    properties:
      major:
        type: string
  loginInfo:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
  newAccount:
    type: object
    required:
    - role
    - first_name
    - last_name
    - email
    - phone_num
    - password
    - gender_name
    properties:
      role:
        type: string
      first_name:
        type: string
      last_name:
          type: string
      email:
        type: string
      phone_num:
        type: string
      password:
        type: string
      gender_name:
        type: string
  updateInfo:
    type: object
    required:
    - major
    properties:
      major:
        type: array
        items:
          type: string
      certificate:
        type: array
        items:
          type: string
      id:
        type: string
      institute:
        type: array
        items:
          type: string
  experience:
    type: object
    required:
    - id
    - experiences
    properties:
      id:
        type: string
      experiences:
        type: array
        items:
          type: object
  teaching_sub:
    type: object
    required:
    - id
    - teaching_subs
    properties:
      id:
        type: string
      teaching_subs:
        type: array
        items:
          type: object
  feedback:
    type: object
    required:
    - id
    - feedbacks
    properties:
      id:
        type: string
      feedbacks:
        type: array
        items:
          type: object
  
paths:
  /auth/register:
    post:
      tags:
        - user
      description: Register new account
      parameters:
       - name: info
         in: body
         require: true
         description: User object that needs to be added to the user db
         schema: 
           $ref: "#/definitions/newAccount"
      respond:
        - 200:
          description: Register success
        - 405:
          description: Invalid input

  /auth/login:
    post:
      tags:
        - Login
      description: user login
      parameters:
        - account:
          in: body
          require: true
          description: user account
          schema: 
            $ref: "#/definitions/loginInfo"
      respond:
        - 200: 
            description: return token
        - 401:
            description: email or password incorrect
  /user/tutor:
    get:
      tags:
        - get tutors
      description: get all tutor
      respond:
        - 404:
          description: no turors
  /user/student:
    get:
      tags:
      - get students
      description: return all students
      respond:
        - 404:
          description: no student
  /user/tutor/update_reference:
    put:
      tags:
      - tutor
      description: update student
      parameters:
        - account:
          in: body
          require: true
          description: update info
          schema: 
            $ref: "#/definitions/updateInfo"
      respond:
        - 200: 
            description: go to user's page
        - 401:
            description: email or password incorrect
  /user/tutor/update_experience:
    put:
      tags:
      - tutor
      description: update tutor experience
      parameters:
        - account:
          in: body
          require: true
          description: update experience
          schema: 
            $ref: "#/definitions/experience"
      respond:
        - 200: 
            description: go to user's page
        - 401:
            description: email or password incorrect
  /user/tutor/update_teaching_sub:
    put:
      tags:
      - tutor
      description: update tutor teaching subject
      parameters:
        - account:
          in: body
          require: true
          description: update teaching subject
          schema: 
            $ref: "#/definitions/teaching_sub"
      respond:
        - 200: 
            description: go to user's page
        - 401:
            description: email or password incorrect
  /user/tutor/update_feedback:
    put:
      tags:
      - tutor
      description: update tutor feedback
      parameters:
        - account:
          in: body
          require: true
          description: update feedback
          schema: 
            $ref: "#/definitions/feedback"
      respond:
        - 200: 
            description: go to user's page
        - 401:
            description: email or password incorrect
      


